name: Three-way invoice match
description: |
  This charter demonstrates how to perform a 3-way match against data from 3 different sources.
  In this example a single INVOICE will match against one or more PAYMENTS and one or more RECEIPTS.
  Relevant dates on each type of the record must be the same and the total amounts from each type of
  record must NET exactly to zero.

  Each record contains it's own currency amount along with an FXRate column denoting the exchange
  rate to conert that to a common currency.
version: 1
debug: false

jetwash:
  source_files:
   - pattern: ^04-invoices\.csv$
   - pattern: ^04-payments\.csv$
   - pattern: ^04-receipts\.csv$

matching:
  source_files:
    - pattern: .*04-invoices.*\.csv
      field_prefix: INV
    - pattern: .*04-payments.*\.csv
      field_prefix: PAY
    - pattern: .*04-receipts.*\.csv
      field_prefix: REC
  instructions:
    - project:
        column: PAYMENT_AMOUNT_BASE
        as_a: Decimal
        from: record["PAY.Amount"] * record["PAY.FXRate"]
        when: record["META.prefix"] == "PAY"
    - project:
        column: RECEIPT_AMOUNT_BASE
        as_a: Decimal
        from: record["REC.Amount"] * record["REC.FXRate"]
        when: record["META.prefix"] == "REC"
    - merge:
        columns: ['PAYMENT_AMOUNT_BASE', 'RECEIPT_AMOUNT_BASE', 'INV.TotalAmount']
        into: AMOUNT_BASE
    - merge:
        columns: ['INV.SettlementDate', 'PAY.PaymentDate', 'REC.ReceiptDate']
        into: SETTLEMENT_DATETIME
      # We will be grouping on the settlement date, but to do so need to remove the time portion of the field.
      # If we don't, then every trade would need to have the exact time to form the same group.
      # Fortuanately, Celerity provides a helper function called date_only. This accepts a unix millisecond
      # timestamp (which is what Datetime columns are in the Lua script) and strips the time portion, setting
      # the hours, minutes, seconds and milliseconds to 0.
    - project:
        column: SETTLEMENT_DATE
        as_a: Datetime
        from: date_only(record["SETTLEMENT_DATETIME"])
    - group:
        by: ['SETTLEMENT_DATE']
        match_when:
          # Here we have two netting constraints and both must pass for the group to be valid.
          # First, we ensure all the payments net against the invoice(s) in the group.
          - nets_with_tolerance:
              column: AMOUNT_BASE
              lhs: record["META.prefix"] == "PAY"
              rhs: record["META.prefix"] == "INV"
              tol_type: Amount
              tolerance: 1.00
          # Then we ensure all the receipts net with all the invoices in the group.
          - nets_with_tolerance:
              column: AMOUNT_BASE
              lhs: record["META.prefix"] == "REC"
              rhs: record["META.prefix"] == "INV"
              tol_type: Amount
              tolerance: 1.00
