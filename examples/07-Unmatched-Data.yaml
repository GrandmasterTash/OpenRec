name: Unmatched Data
description: |
  This charter demonstrates what occurs when not all data is matched. Start by only copying
  these files into the waiting folder: -

    20211129_043300000_07-invoices
    20211129_043300000_07-payments-a.csv

  If run it will result in an invoice being written to an unmatched file. The file will share the
  same name as the original data file that loaded the invoice and reside in the unmatched folder.

  Next, copy this file into the waiting folder: -

    20211129_043300000_07-payments-b.csv

  Re-running the charter should match the outstanding payment to the unmatched invoice. You
  should now see 2 matched.json files and no files left in the unmatched folder.
version: 1
# Note, in-order to re-process un-matched records, the file pattern must allow for files that
# have the name format yyyymmdd_hhmmssmmm_XXXXXX.unmatched.csv. These files contain previously
# unmatched data and are moved back into the matching folder during subsequent match jobs.
debug: true
matching:
  source_files:
    - pattern: .*07-invoices.*\.csv
      field_prefix: I
    - pattern: .*07-payments.*\.csv
      field_prefix: P
  instructions:
    - merge:
        columns: ['I.InvoiceAmount', 'P.PaymentAmount']
        into: AMOUNT
    - merge:
        columns: ['I.InvoiceRef', 'P.PaymentRef']
        into: REF
    - group:
        by: ['REF']
        match_when:
          - nets_to_zero:
              column: AMOUNT
              lhs: record["META.prefix"] == "I"
              rhs: record["META.prefix"] == "P"
